name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}  # e.g., ec2-35-154-144-165.ap-south-1.compute.amazonaws.com
          username: ${{ secrets.SSH_USERNAME }}  # e.g., ubuntu
          key: ${{ secrets.SSH_KEY }}  # Private key for SSH
          port: 22
          script: |
            cd ~/app
            # Copy files from GitHub workspace to ~/app (assuming they're mounted)
            cp -r /github/workspace/* .
            echo "NEXT_PUBLIC_AUTH_SECRET=${{ secrets.NEXT_PUBLIC_AUTH_SECRET }}" > .env.local
            echo "NEXT_PUBLIC_RAZORPAY_KEY=${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY }}" >> .env.local
            echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" >> .env.local
            echo "NEXT_PUBLIC_EMAILJS_SERVICE_ID=${{ secrets.NEXT_PUBLIC_EMAILJS_SERVICE_ID }}" >> .env.local
            echo "NEXT_PUBLIC_EMAILJS_TEMPLATE_ID=${{ secrets.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID }}" >> .env.local
            echo "NEXT_PUBLIC_EMAILJS_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY }}" >> .env.local
            echo "NODE_ENV=production" >> .env.local
            echo "PORT=3000" >> .env.local
            echo "HOSTNAME=0.0.0.0" >> .env.local
            cat .env.local
            file .env.local
            docker compose pull
            docker compose down
            docker compose up -d --build  # Add --build to force rebuild